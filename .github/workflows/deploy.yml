name: CI/CD Pipeline

on:
  push:
    branches:
      - dev
      - staging
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    environment:
      name: ${{ github.ref_name == 'main' && 'production' || github.ref_name }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.20'

      - name: Install Dependencies
        run: npm install --legacy-peer-deps

      - name: Build Project
        run: |
          if [[ "${{ github.ref_name }}" == "dev" ]]; then
            npm run build:dev
          elif [[ "${{ github.ref_name }}" == "staging" ]]; then
            npm run build:staging
          elif [[ "${{ github.ref_name }}" == "main" ]]; then
            npm run build:production
          fi

      - name: Deploy to S3
        run: aws s3 sync build/ s3://$AWS_S3_BUCKET --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}

      - name: Invalidate CloudFront Cache
        run: aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          DISTRIBUTION_ID: ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }}
